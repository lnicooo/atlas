package HermesCRC;

import java.awt.event.*;
import javax.swing.*;
import AtlasPackage.*;

/**
 * This class creates the HermesCRC GUI allowing select the HermesCRC NoC parameters and generate it.
 * @author Aline Vieira de Mello
 * @version
 */
public class CRCInterface extends NoCGenerationGUI implements ActionListener{
	private Project project;
	private NoC noc;

	/**
	 * Constructor class.
	 * @param project The project where the NoC will be generated.
	 */
	public CRCInterface(Project project){
		super("Hermes-CRC   "+project.getStringProjFile());
		this.project = project;
		this.noc = project.getNoC();
		addComponents();
		super.setVisible(true);
	}

	/**
	 * add components in the HermesCRC GUI.
	 */
	private void addComponents(){
		int x=10;
		int y=2;
		int dimx=160;
		int dimy=56;
		int stepy=63;
		//Menu Bar with Help
		addMenu(this);
		//GAPH Icon
		addGaphIcon(690,y,90,27);
		//NoC dimensionsh
		y+=20;
		String[] dimension = { "2", "3", "4", "5", "6", "7", "8", "9", "10", "11","12", "13", "14", "15", "16"};
		addDimensions(x, y, dimx, dimy, dimension, ""+noc.getNumRotX(), ""+noc.getNumRotY(), this);
		//Flit width
		y+=60;
		String[] availableFlitWidth = { "16" };
		addFlitWidth(x, y, dimx, dimy, availableFlitWidth, ""+noc.getFlitSize(), this);
		//Buffer depth
		y+=stepy;
		String[] availableDepth = { "4", "8", "16", "32" };
		addBuffer(x, y, dimx, dimy, availableDepth, ""+noc.getBufferDepth());
		//SC test bench
//		y+=stepy;
//		addSCTestBench(x, y, dimx, 51, noc.isSCTB(), this);
		//CRC Type
		y+=stepy;
		String[] availableCrcType = {"Link CRC","Source CRC","Hamming"};
		addCrcType(x, y, dimx, 51, availableCrcType, noc.getCrcType(), this);
		//Has Saboteur
		y+=stepy;
		addSaboteur(x, y, dimx, 51, noc.isSaboteur(), this);
		//Saboteur Type
		y+=stepy;
		addSaboteurType(x, y, dimx, 110, noc.isDr(), noc.isDf(), noc.isGn(), noc.isGp(), this);
		//Generate button
		y = y + 150 + stepy;
		addGenerateButton(x, y, dimx, 40, this);
		//Panel with NoC topology
		addNoCPanel(180, 30, 600, 557, noc.getType());
		
		//Fixed parameters
		getFlitWidth().setEnabled(false);
		//enabled the saboteur types when saboteur option is selected.
		setEnabledSaboteurType(noc.isSaboteur());
	}

	/**
	 * Update the project with the NoC parameters.
	 */
	private void updateProject(){
		noc.setNumRotX(getDimXSelected());
		noc.setNumRotY(getDimYSelected());
		//fixed parameters
		noc.setVirtualChannel(1);
		noc.setFlowControl("CreditBased");
		noc.setScheduling("RoundRobin");
		noc.setAlgorithm("AlgorithmXY");
		noc.setBufferDepth(Integer.valueOf(getBufferDepthSelected()).intValue());
//		noc.setSCTB(hasSCTestBench());
		noc.setCrcType(getCrcTypeSelected());
		noc.setSaboteur(hasSaboteur());
		noc.setDr(hasDrSaboteur());
		noc.setDf(hasDfSaboteur());
		noc.setGn(hasNgSaboteur());
		noc.setGp(hasPgSaboteur());
		project.setNoCGenerate(true);
		noc.setCyclesPerFlit(1);
		noc.setCyclesToRoute(5);
		//write the project file.
		project.write();
	}

	/**
	 * Generate the NoC with the selected parameters.
	 */
	private void generate(){
		updateProject();
		CRCCreditBased creditBased = new CRCCreditBased(project);
		creditBased.generate();
		super.dispose();
	}
		
	public void actionPerformed(ActionEvent e){
		if(e.getSource()==getDimX() || e.getSource()==getDimY() || e.getSource()==getFlitWidth()){
			verifyDimension(this);
		}
		else if(e.getSource()==getSaboteur()){
			setEnabledSaboteurType(hasSaboteur());
			if(!hasSaboteur())
				setSelectedSaboteurType(false);
		}
		else if(e.getSource()==getGenerateButton()){
			if(hasSaboteur() && !hasSelectedSaboteurType()){
				JOptionPane.showMessageDialog(this,"You must select at least one type of Saboteur!","Error Message", JOptionPane.ERROR_MESSAGE);
			}
			else if(project.isNoCGenerate()){
				int option = JOptionPane.showConfirmDialog(null,"This option clean throughout the project, removing all files generated by the Traffic Generation and Traffic Evaluation. Do you want to do this?","Question Message", JOptionPane.OK_CANCEL_OPTION);
				if(option == JOptionPane.OK_OPTION){
					project.delete();
					generate();
				}
			}
			else
				generate();
		}
		else if(e.getActionCommand().equalsIgnoreCase("Documentation"))
		    Help.show("https://corfu.pucrs.br/redmine/projects/atlas/wiki");
		else if(e.getActionCommand().equalsIgnoreCase("About Hermes-CRC"))
			JOptionPane.showMessageDialog(this,"Hermes-CRC          17.10.2006\nDeveloped by:\n\t        Aline Vieira de Mello\n\t        Carlos Adail Scherer Jr.","VERSION 1.0",JOptionPane.INFORMATION_MESSAGE);
	}
}