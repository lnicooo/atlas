package HermesOB;

import java.awt.event.*;
import javax.swing.*;
import AtlasPackage.*;

/**
 * This class creates the HermesOB GUI allowing select the HermesOB NoC parameters and generate it.
 * @author Nicolas Lod√©a e Angelo Elias Dalzotto
 * @version
 */
public class HermesOBInterface extends NoCGenerationGUI implements ActionListener{
	private Project project;
	private NoC noc;

	/**
	 * Constructor class.
	 * @param project The project where the NoC will be generated.
	 */
	public HermesOBInterface(Project project){
		super("Hermes-OB   "+project.getStringProjFile());
		this.project = project;
		this.noc = project.getNoC();
		addComponents();
		super.setVisible(true);
	}

	/**
	 * add components in the HermesCRC GUI.
	 */
	private void addComponents(){
		int x=10;
		int y=2;
		int dimx=160;
		int dimy=56;
		int stepy=63;
		//Menu Bar with Help
		addMenu(this);
		//GAPH Icon
		addGaphIcon(690,y,90,27);
		//Flow control
		y=y+20;
		String[] availableFlowControl = {"CreditBased"};
		addFlowControl(x, y, dimx, dimy, availableFlowControl, noc.getFlowControl(), this);
		//Scheduling algorithm
		y=y+63;
		String[] availableScheduling = {"RoundRobin"};
		addScheduling(x, y, dimx, dimy, availableScheduling, noc.getScheduling(), this);
		//NoC dimensionsh
		y=y+63;
		String[] dimension = { "2", "3", "4", "5", "6", "7", "8", "9", "10", "11","12", "13", "14", "15", "16"};
		addDimensions(x, y, dimx, dimy, dimension, ""+noc.getNumRotX(), ""+noc.getNumRotY(), this);
		//Flit width
		y+=60;
		String[] availableFlitWidth = { "4", "8", "16", "32", "64" };
		addFlitWidth(x, y, dimx, dimy, availableFlitWidth, ""+noc.getFlitSize(), this);
		//Buffer depth
		y+=stepy;
		String[] availableDepth = { "2", "4", "8" };
		addBuffer(x, y, dimx, dimy, availableDepth, ""+noc.getBufferDepth());
		//routing algorithm
		y=y+63;
		String[] availableAlgorithm = {"XY"};
		addRoutingAlgorithm(x, y, dimx, dimy, availableAlgorithm, "XY");

		//Generate button
		y = y + 150 + stepy;
		addGenerateButton(x, y, dimx, 40, this);
		//Panel with NoC topology
		addNoCPanel(180, 30, 600, 557, noc.getType());
		
		//Fixed parameters
		getFlowControl().setEnabled(false);
		getScheduling().setEnabled(false);
		getRoutingAlgorithm().setEnabled(false);
		
	}

	/**
	 * Update the project with the NoC parameters.
	 */
	private void updateProject(){
		noc.setNumRotX(getDimXSelected());
		noc.setNumRotY(getDimYSelected());
		//fixed parameters
		noc.setVirtualChannel(1);
		noc.setFlowControl("CreditBased");
		noc.setScheduling("RoundRobin");
		noc.setAlgorithm("AlgorithmXY");
		noc.setFlitSize(Integer.valueOf(getFlitWidthSelected()).intValue());
		noc.setBufferDepth(Integer.valueOf(getBufferDepthSelected()).intValue());
		noc.setCyclesPerFlit(1);
		noc.setCyclesToRoute(3);
		project.setNoCGenerate(true);
		project.setTrafficGenerate(true);
		project.setPowerEstimated(false);

		//write the project file.
		project.write();
	}

	/**
	 * Generate the NoC with the selected parameters.
	 */
	private void generate(){
		updateProject();

		HermesOBCreditBased creditBased = new HermesOBCreditBased(project);
		creditBased.generate();
		
		super.dispose();
	}
		
	public void actionPerformed(ActionEvent e){
		if(e.getSource()==getDimX() || e.getSource()==getDimY() || e.getSource()==getFlitWidth()){
			verifyDimension(this);
		}
		
		else if(e.getSource()==getGenerateButton()){
			if(project.isNoCGenerate()){
				int option = JOptionPane.showConfirmDialog(null,"This option clean throughout the project, removing all files generated by the Traffic Generation and Traffic Evaluation. Do you want to do this?","Question Message", JOptionPane.OK_CANCEL_OPTION);
				if(option == JOptionPane.OK_OPTION){
					project.delete();
					generate();
				}
			}
			else
				generate();
		}
		else if(e.getActionCommand().equalsIgnoreCase("Documentation"))
		    Help.show("https://corfu.pucrs.br/redmine/projects/atlas/wiki");
		else if(e.getActionCommand().equalsIgnoreCase("About Hermes-CRC"))
			JOptionPane.showMessageDialog(this,"Hermes-CRC          17.10.2006\nDeveloped by:\n\t        Aline Vieira de Mello\n\t        Carlos Adail Scherer Jr.","VERSION 1.0",JOptionPane.INFORMATION_MESSAGE);
	}


}